{
    "name": "database_connector",
    "config": {
        "name": "database_connector",
        "topic.prefix": "sample",
        "connector.class": "io.debezium.connector.mysql.MySqlConnector",
        "database.server.id": "1",
        "tasks.max": "1",
        "database.history.kafka.bootstrap.servers": "[KAFKA_BROKERS]",
        "database.history.kafka.topic": "database_connector.mysql",
        "database.server.name": "mysql",
        "database.hostname": "[DATABASE_HOST]",
        "database.port": "3306",
        "database.user": "[DATABASE_USERNAME]",
        "database.password": "[DATABASE_PASSWORD]",
        "database.whitelist": "[DATABASE_SCHEMA]",
        "table.include.list": "[DATABASE_SCHEMA].users,[DATABASE_SCHEMA].products,[DATABASE_SCHEMA].purchases",
        "internal.key.converter.schemas.enable": "false",
        "transforms.unwrap.add.source.fields": "ts_ms",
        "key.converter.schemas.enable": "false",
        "internal.key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "internal.value.converter.schemas.enable": "false",
        "value.converter.schemas.enable": "false",
        "internal.value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "transforms": "unwrap",
        "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
        "schema.history.internal.kafka.topic": "schemahistory.fullfillment",
        "schema.history.internal.kafka.bootstrap.servers": "[KAFKA_BROKERS]",
        "errors.log.enable": "true",
        "snapshot.mode": "when_needed",
        "key.converter": "io.apicurio.registry.utils.converter.AvroConverter",
        "key.converter.apicurio.registry.url": "http://localhost:8080/apis/registry/v2",
        "key.converter.apicurio.registry.auto-register": "true",
        "key.converter.apicurio.registry.find-latest": "true",
        "value.converter": "io.apicurio.registry.utils.converter.AvroConverter",
        "value.converter.apicurio.registry.url": "http://localhost:8080/apis/registry/v2",
        "value.converter.apicurio.registry.auto-register": "true",
        "value.converter.apicurio.registry.find-latest": "true",
        "value.converter.apicurio.registry.as-confluent": "true",
        "value.converter.apicurio.registry.use-id": "contentId",
        "schema.name.adjustment.mode": "avro"
    }
}